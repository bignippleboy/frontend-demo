<!-- dynamically generated xml file (by the editor plugin) --><krpano version="1.18.3">	<progress showload="none" showwait="none" />	<display movequality10="BEST" stillquality10="BEST" />		<plugin name="gyro" devices="html5" url="%SWFPATH%/plugins/gyro.js" enabled="true" camroll="true" friction="0" velastic="0" keep="true" 	        onavailable="set(layer[gyrobutton].visible,true); set(layer[infotext].html,'Gyroscope available, press the gyro button...');"	        onloaded="delayedcall(1,ifnot(available, showgyrowarning() ));"	        />    <layer name="bottombar" keep="true" type="container" bgcolor="0x000000" bgalpha="0.5" align="leftbottom" width="100%" height="40">        <layer name="infotext" url="plugins/textfield.swf" background="false" border="false" enabled="true" html="abc" css="text-align:left; color:#FFFFFF; font-family:Arial; font-size:14px; font-weight:bold;" align="left" x="10" height="90%" vcenter="true" />        <layer name="gyrobutton" url="gyroicon.png" scale="0.5" align="right" x="10" visible="true" onclick="switch(plugin[gyro].enabled);" />    </layer>	        	<events onxmlcomplete="showgyrowarning();" devices="flash" />			<action name="showgyrowarning">		set(layer[infotext].html,'Gyroscope NOT available...'))	</action>	<view fovtype="MFOV" fov="120.0" fovmin="69.212142" fovmax="140.0" maxpixelzoom="2.00" 	      limitfov="false" stereographic="true" 	      />	<preview url="panos/_sphere.tiles/preview.jpg" />	<image type="CUBE" multires="true" progressive="false" tilesize="512" multiresthreshold="0.025">		<level tiledimagewidth="512" tiledimageheight="512">			<cube url="panos/_sphere.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />		</level>		<level tiledimagewidth="1024" tiledimageheight="1024">			<cube url="panos/_sphere.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />		</level>	</image>	<control keycodesin="" keycodesout="" />	<contextmenu fullscreen="true">		<item  name="kr" caption="KRPANO"  />		<item  name="fs" caption="FULLSCREEN"  />		<item  name="cc" separator="true" caption="Change Controlmode" onclick="skin_changecontrolmode();"  />		<item  name="nv" separator="true" caption="Normal View" onclick="skin_view_normal();"  />		<item  name="fv" caption="Fisheye View" onclick="skin_view_fisheye();"  />		<item  name="sv" caption="Stereographic View" onclick="skin_view_stereographic();"  />		<item  name="av" caption="Architectural View" onclick="skin_view_architectural();"  />		<item  name="pv" caption="Pannini View" onclick="skin_view_pannini();"  />		<item  name="lp" caption="Little Planet View" onclick="skin_view_littleplanet();"  />	</contextmenu>	<events name="skin_events" keep="true"	        onnewpano="skin_showloading(true); skin_update_scene_infos();"	        onremovepano="skin_showloading(true);"	        onloadcomplete="skin_showloading(false);"	        onresize="skin_onresize();"	        onenterfullscreen="set(layer[skin_btn_fs].crop, '64|576|64|64');"	        onexitfullscreen="set(layer[skin_btn_fs].crop, '0|576|64|64');"	        />	<action name="skin_startup">		if(device.mobile == false,			copy(layer[skin_control_bar].y, skin_settings.controlbar_offset);			copy(layer[skin_control_bar].y_opened, skin_settings.controlbar_offset);			add(layer[skin_scroll_window].y, layer[skin_control_bar].height, layer[skin_control_bar].y);			add(layer[skin_scroll_window].y_opened, layer[skin_control_bar].height, layer[skin_control_bar].y_opened);			if(skin_settings.thumbs,				if(skin_settings.thumbs_opened, set(layer[skin_thumbs].state,'opened'); set(layer[skin_thumbs_container].visible,true); );				copy(layer[skin_thumbs].draggable, skin_settings.thumbs_dragging);				if(skin_settings.thumbs_onhoverscrolling,					if(device.mouse, set(layer[skin_thumbs].draggable, false));					set(layer[skin_thumbs].onhover_autoscrolling, true);				  );			  );		  );		skin_addthumbs();		skin_onresize();		skin_updatescroll();		copy(usegyro, skin_settings.gyro);		if(device.desktop, set(usegyro, false));		if(device.flash, set(usegyro, false));		if(usegyro, copy(plugin[skin_gyro].url, plugin[skin_gyro].html5_url); );		if(skin_settings.maps == true,			set(layer[skin_btn_map].visible, true);			copy(layer[skin_map_zoom_in].visible,  skin_settings.maps_zoombuttons);			copy(layer[skin_map_zoom_out].visible, skin_settings.maps_zoombuttons);			if(device.flash,				copy(layer[skin_map].key, skin_settings.maps_bing_api_key);				set(layer[skin_map].url, '%SWFPATH%/plugins/bingmaps.swf');			  ,				if(skin_settings.maps_type == 'bing', 					copy(layer[skin_map].key, skin_settings.maps_bing_api_key);					set(layer[skin_map].url, '%SWFPATH%/plugins/bingmaps.js'); 				  ,					set(layer[skin_map].url, '%SWFPATH%/plugins/googlemaps.js'); 				  );			  );		  ,			if(device.mobile, copy(layer[skin_btn_gyro].x, layer[skin_btn_map].x) );		  );	</action>	<action name="skin_addthumbs">		if(skin_settings.thumbs == false, 					set(layer[skin_btn_thumbs].visible,false);		,					copy(thumbwidth, skin_settings.thumbs_width);					copy(thumbheight, skin_settings.thumbs_height);					copy(thumbpadding, skin_settings.thumbs_padding);					copy(thumbcrop, skin_settings.thumbs_crop);					if(device.mobile,						mul(thumbwidth,2);						mul(thumbheight,2);						mul(thumbpadding,2);					  );					add(thumbxoffset, thumbwidth, thumbpadding);					mul(thumbxcenter, thumbxoffset, 0.5);					mul(thumbbarwidth, thumbxoffset, scene.count);					add(thumbbarwidth, thumbpadding);					add(thumbbarheight, thumbpadding, thumbheight);					add(thumbbarheight, thumbpadding);					if(skin_settings.thumbs_scrollindicator,						copy(layer[skin_thumbs_scrollindicator].y, thumbbarheight);						add(thumbbarheight, layer[skin_thumbs_scrollindicator].height);					);					copy(layer[skin_thumbs].height, thumbbarheight);					copy(layer[skin_thumbs].width, thumbbarwidth);					mul(halfheight, thumbbarheight, 0.5);					copy(layer[skin_thumbs_scrollleft].y, halfheight);					copy(layer[skin_thumbs_scrollright].y, halfheight);					for(set(i,0), i LT scene.count, inc(i),						txtadd(thumbname,'skin_thumb_',get(i));						addlayer(get(thumbname));						copy(layer[get(thumbname)].url, scene[get(i)].thumburl);						set(layer[get(thumbname)].keep, true);						set(layer[get(thumbname)].parent, 'skin_thumbs');						set(layer[get(thumbname)].align, lefttop);						copy(layer[get(thumbname)].crop, thumbcrop);						copy(layer[get(thumbname)].width, thumbwidth);						copy(layer[get(thumbname)].height, thumbheight);						mul(thumbx, i, thumbxoffset);						add(thumbx, thumbpadding);						copy(layer[get(thumbname)].x, thumbx);						copy(layer[get(thumbname)].y, thumbpadding);						add(scene[get(i)].thumbx, thumbx, thumbxcenter);						copy(scene[get(i)].thumby, thumbpadding);						set(layer[get(thumbname)].linkedscene, get(scene[get(i)].name) );						set(layer[get(thumbname)].onclick, copy(layer[skin_thumbborder].parent, name); loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); );						if(skin_settings.tooltips_thumbs,							set(layer[get(thumbname)].tooltip, get(scene[get(i)].title) );							layer[get(thumbname)].loadstyle(skin_tooltips);						  );						if(skin_settings.thumbs_text,							txtadd(thumbtext, 'skin_thumbtext_', get(i));							addlayer(get(thumbtext));							layer[get(thumbtext)].loadstyle(skin_thumbtext_style);							set(layer[get(thumbtext)].keep, true);							set(layer[get(thumbtext)].parent, get(thumbname));							set(layer[get(thumbtext)].html, get(scene[get(i)].title));						  );					   );		);	</action>	<action name="skin_addmapspots">		for(set(i,0), i LT scene.count, inc(i),			if(scene[get(i)].lat,				txtadd(spotname, 'spot', get(i));				txtadd(spotclickevent, 'skin_hidetooltips(); activatespot(',get(spotname),'); loadscene(', get(scene[get(i)].name), ',null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); skin_updatescroll(); delayedcall(0.5,skin_showmap(false));');				copy(scene[get(i)].mapspotname, spotname);				addspot(get(spotname), get(scene[get(i)].lat), get(scene[get(i)].lng), get(scene[get(i)].heading), false, get(spotclickevent), null);				if(skin_settings.tooltips_mapspots,					set(layer[skin_map].spot[get(spotname)].tooltip, get(scene[get(i)].title) );					txtadd(layer[skin_map].spot[get(spotname)].onover, 'set(hovering,true);',  get(style[skin_tooltips].onover) );					txtadd(layer[skin_map].spot[get(spotname)].onout,  'set(hovering,false);', get(style[skin_tooltips].onout)  );				  );			  );		  );		if(xml.scene != null,			activatespot( get(scene[get(xml.scene)].mapspotname) );		  ,			activatespot(spot0);		  );		zoomToSpotsExtent();	</action>	<action name="skin_onresize">		mul(mh, area.pixelheight, -1);		if(layer[skin_thumbs].state == 'opened', add(mh,layer[skin_thumbs].height); );		if(layer[skin_map].state == 'opened', sub(hh,area.pixelheight,skin_settings.controlbar_offset); sub(hh,layer[skin_control_bar].height); sub(hh,32); copy(layer[skin_map].height, hh); add(mh,hh); );		set(layer[skin_scroll_layer].y, get(mh));		ifnot(device.mobile, if(area.pixelwidth LT 480, skin_showbuttons(false), skin_showbuttons(true)); );	</action>	<action name="skin_showbuttons">		set(layer[skin_btn_lt].visible, %1);		set(layer[skin_btn_rt].visible, %1);		set(layer[skin_btn_up].visible, %1);		set(layer[skin_btn_dn].visible, %1);		set(layer[skin_btn_in].visible, %1);		set(layer[skin_btn_ou].visible, %1);		if(%1 == true,			if(plugin[skin_gyro].available == true AND view.vlookatrange == 180, set(layer[skin_btn_gyro].visible, true), set(layer[skin_btn_gyro].visible, false) );			if(device.fullscreensupport, set(layer[skin_btn_fs].visible, true) );		  ,			set(layer[skin_btn_gyro].visible, false);			set(layer[skin_btn_fs].visible, false);		  );	</action>	<action name="skin_updatescroll">		if(layer[skin_thumbs].loaded,					set(cursceneindex, 0);					if(xml.scene, copy(cursceneindex, scene[get(xml.scene)].index));					layer[skin_thumbs].setcenter(get(scene[get(cursceneindex)].thumbx), get(scene[get(cursceneindex)].thumby));		);	</action>	<action name="skin_updatethumbscroll">		copy(padding,skin_settings.thumbs_padding);		if(device.mobile, mul(padding,2));		if(skin_settings.thumbs_scrollbuttons,			if(loverflow GT 0, set(layer[skin_thumbs_scrollleft].visible,true),  set(layer[skin_thumbs_scrollleft].visible,false) );			if(roverflow GT 0, set(layer[skin_thumbs_scrollright].visible,true), set(layer[skin_thumbs_scrollright].visible,false) );		  );		if(skin_settings.thumbs_scrollindicator,			if(woverflow GT 0,				set(layer[skin_thumbs_scrollindicator].visible,true);				sub(iw,pixelwidth,woverflow);				div(pw,iw,pixelwidth);				div(px,loverflow,woverflow);				mul(pw,iw);				copy(layer[skin_thumbs_scrollindicator].width,pw);				sub(iw,pw);				sub(iw,padding);				sub(iw,padding);				mul(px,iw);				add(px,padding);				copy(layer[skin_thumbs_scrollindicator].x,px);			  ,				set(layer[skin_thumbs_scrollindicator].visible,false);			  );		  );	</action>	<action name="skin_update_scene_infos">		if(xml.scene !== null,					if(scene[get(xml.scene)].index GE 0,						if(skin_settings.title,							if(title, txtadd(layer[skin_title].html, get(title), ' - ', get(scene[get(xml.scene)].title) ); , copy(layer[skin_title].html, scene[get(xml.scene)].title ); );							delayedcall(0.1, set(layer[skin_title].visible,true) );						  );						if(skin_settings.thumbs_loop == false,							if(scene[get(xml.scene)].index GT 0,								set(layer[skin_btn_prev].enabled, true);								set(layer[skin_btn_prev].alpha, 1.0);							  ,								set(layer[skin_btn_prev].enabled, false);								set(layer[skin_btn_prev].alpha, 0.3);							  );							sub(lastsceneindex, scene.count, 1);							if(scene[get(xml.scene)].index LT lastsceneindex,								set(layer[skin_btn_next].enabled, true);								set(layer[skin_btn_next].alpha, 1.0);							  ,								set(layer[skin_btn_next].enabled, false);								set(layer[skin_btn_next].alpha, 0.3);							  );						  ,							if(scene.count GT 1,								set(layer[skin_btn_prev].enabled, true);								set(layer[skin_btn_prev].alpha, 1.0);								set(layer[skin_btn_next].enabled, true);								set(layer[skin_btn_next].alpha, 1.0);							  ,								set(layer[skin_btn_prev].enabled, false);								set(layer[skin_btn_prev].alpha, 0.3);								set(layer[skin_btn_next].enabled, false);								set(layer[skin_btn_next].alpha, 0.3);							  );						  );						txtadd(parentname, 'skin_thumb_', get(scene[get(xml.scene)].index));						if(layer[get(parentname)],							set(layer[skin_thumbborder].parent, get(parentname));							set(layer[skin_thumbborder].visible, true);						  ,							set(layer[skin_thumbborder].visible, false);						  );						if(scene[get(xml.scene)].mapspotname,							layer[skin_map].activatespot(get(scene[get(xml.scene)].mapspotname));							layer[skin_map].pantospot(get(scene[get(xml.scene)].mapspotname));						  );						if(plugin[skin_gyro].available == true AND view.vlookatrange == 180, 							set(layer[skin_btn_gyro].visible, true);						  , 							set(layer[skin_btn_gyro].visible, false) 						);					  );		);	</action>	<action name="skin_nextscene">		add(newsceneindex, scene[get(xml.scene)].index, %1);		if(newsceneindex GE 0,			if(newsceneindex LT scene.count,				txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));				layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));				loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend));			  );		  );	</action>	<action name="skin_nextscene_loop">		add(newsceneindex, scene[get(xml.scene)].index, %1);		sub(lastsceneindex, scene.count, 1);		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));		layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));		loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend));	</action>	<action name="skin_showloading">		set(layer[skin_loadingtext].visible, %1);	</action>	<action name="skin_hidetooltips">		set(layer[skin_tooltip].alpha,0.0);		set(layer[skin_tooltip].visible,false);	</action>	<action name="skin_buttonglow">		if(%1 != null,					set(strength,0.7);					if(%2 != null, set(strength,%2));					set(layer[skin_buttonglow].parent, %1);					set(layer[skin_buttonglow].visible, true);					tween(layer[skin_buttonglow].alpha, get(strength), 0.07);		,					tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default, set(layer[skin_buttonglow].parent, null); set(layer[skin_buttonglow].visible, false); );		);	</action>	<action name="skin_hideskin">		if(layer[skin_map].state != 'closed', skin_showmap(false); wait(0.4); );		if(layer[skin_thumbs].state != 'closed', skin_showthumbs(false); wait(0.25); );		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_closed), 0.5, easeOutQuint);		tween(layer[skin_control_bar].y, get(layer[skin_control_bar].y_closed), 0.5, easeOutQuint);		set(layer[skin_btn_show].visible,true);		tween(layer[skin_btn_show].alpha, 1, 0.25, easeOutQuint);	</action>	<action name="skin_showskin">		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_opened), 0.5, easeOutQuint);		tween(layer[skin_control_bar].y, get(layer[skin_control_bar].y_opened), 0.5, easeOutQuint);		set(layer[skin_btn_show].visible,false);		tween(layer[skin_btn_show].alpha,0,0);	</action>	<action name="skin_showthumbs">		if(%1 == null, if(layer[skin_thumbs].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );		mul(mh, layer[skin_scroll_layer].pixelheight, -1);		if(layer[skin_scroll_layer].y == -100%, copy(layer[skin_scroll_layer].y,mh));		if(show,			set(layer[skin_thumbs].state, 'opened');			add(mh, layer[skin_thumbs].height);			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);			set(layer[skin_thumbs_container].visible, true);			tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);			tween(layer[skin_map].alpha, 0.0, 0.25, default, set(layer[skin_map].visible,false));		  ,			set(layer[skin_thumbs].state, 'closed');			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_thumbs_container].visible, false););		  );	</action>	<action name="skin_showmap">		if(%1 == null, if(layer[skin_map].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );		mul(mh, layer[skin_scroll_layer].pixelheight, -1);		if(layer[skin_scroll_layer].y == -100%, copy(layer[skin_scroll_layer].y,mh));		if(show,			tween(layer[skin_logo].alpha, 0.0, 0.25, default, set(layer[skin_logo].visible,false));			tween(layer[skin_thumbs_container].alpha, 0.0, 0.25, default, set(layer[skin_thumbs_container].visible,false));			set(layer[skin_map].visible, true);			tween(layer[skin_map].alpha, 1.0, 0.25);			set(layer[skin_map].state, 'opened');			sub(hh,area.pixelheight,skin_settings.controlbar_offset);			sub(hh,layer[skin_control_bar].height);			sub(hh,32);			add(mh,hh);			copy(layer[skin_map].height, hh);			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);		  ,			set(layer[skin_map].state, 'closed');			set(layer[skin_logo].visible, true); tween(layer[skin_logo].alpha, 1.0, 0.25);			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_map].visible,false) );		  );	</action>	<action name="skin_openlogo">		if(layer[skin_logo].state == 'small',					set(layer[skin_logo].state, 'opening');					copy(backup_logo_align, layer[skin_logo].align);					copy(backup_logo_x, layer[skin_logo].x);					copy(backup_logo_y, layer[skin_logo].y);					copy(backup_logo_scale, layer[skin_logo].scale);					layer[skin_logo].changeorigin(center);					tween(layer[skin_logo].x, 0, 0.5, easeOutQuint);					tween(layer[skin_logo].y, 0, 0.5, easeOutQuint);					tween(layer[skin_logo].scale, 1, 0.5, easeOutQuint);					delayedcall(0.5, set(layer[skin_logo].state, 'opened') );					delayedcall(0, set(events[skin_events].onmouseup, delayedcall(0, skin_closelogo()) ) );		);	</action>	<action name="skin_closelogo">		if(layer[skin_logo].state == 'opened',					set(layer[skin_logo].state, 'closing');					layer[skin_logo].changeorigin(get(backup_logo_align));					if(%1 == 'now',						stoptween(layer[skin_logo].x, layer[skin_logo].y, layer[skin_logo].scale);						copy(layer[skin_logo].x, backup_logo_x);						copy(layer[skin_logo].y, backup_logo_y);						copy(layer[skin_logo].scale, backup_logo_scale);						set(layer[skin_logo].state, 'small');					  ,						tween(layer[skin_logo].x, get(backup_logo_x), 0.5, easeOutQuint);						tween(layer[skin_logo].y, get(backup_logo_y), 0.5, easeOutQuint);						tween(layer[skin_logo].scale, get(backup_logo_scale), 0.5, easeOutQuint);						delayedcall(0.5, set(layer[skin_logo].state, 'small'));					  );					set(events[skin_events].onmouseup, null);		);	</action>	<action name="skin_changecontrolmode">		switch(control.mousetype, moveto, drag2d);		switch(control.touchtype, moveto, drag2d);	</action>	<action name="skin_view_look_straight">		if(view.vlookat LT -80 OR view.vlookat GT +80,					tween(view.vlookat, 0.0, 1.0, easeInOutSine);					tween(view.fov,     100, distance(150,0.8));		);	</action>	<action name="skin_view_normal">		skin_view_look_straight();		tween(view.architectural, 0.0, distance(1.0,0.5));		tween(view.pannini,       0.0, distance(1.0,0.5));		tween(view.fisheye,       0.0, distance(1.0,0.5));	</action>	<action name="skin_view_fisheye">		skin_view_look_straight();		tween(view.architectural, 0.0,  distance(1.0,0.5));		tween(view.pannini,       0.0,  distance(1.0,0.5));		tween(view.fisheye,       0.35, distance(1.0,0.5));	</action>	<action name="skin_view_architectural">		skin_view_look_straight();		tween(view.architectural, 1.0, distance(1.0,0.5));		tween(view.pannini,       0.0, distance(1.0,0.5));		tween(view.fisheye,       0.0, distance(1.0,0.5));	</action>	<action name="skin_view_stereographic">		skin_view_look_straight();		tween(view.architectural, 0.0, distance(1.0,0.5));		tween(view.pannini,       0.0, distance(1.0,0.5));		tween(view.fisheye,       1.0, distance(1.0,0.8));	</action>	<action name="skin_view_pannini">		skin_view_look_straight();		tween(view.architectural, 0.0, distance(1.0,0.5));		tween(view.pannini,       1.0, distance(1.0,0.8));		if(view.fisheye LT 0.1,			tween(view.fisheye, 1.0, distance(1.0,0.8));		  );	</action>	<action name="skin_view_littleplanet">		tween(view.architectural, 0.0, distance(1.0,0.5));		tween(view.pannini,       0.0, distance(1.0,0.5));		tween(view.fisheye,       1.0, distance(1.0,0.8));		tween(view.fov,           150, distance(150,0.8));		tween(view.vlookat,        90, distance(100,0.8));		add(new_hlookat, view.hlookat, 123.0);		tween(view.hlookat, get(new_hlookat), distance(100,0.8));	</action>	<action name="startup">		if(startscene === null, copy(startscene,scene[0].name));		loadscene(get(startscene), null, MERGE);	</action>	<style name="skin_base" url="skin/vtourskin.png" />	<style name="skin_glow" onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );" ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );" onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); " onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));" />	<style name="skin_thumbtext_style" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:10px;" autoheight="true" align="bottom" enabled="false" y="5" border="false" width="100%" background="false" textshadow="1" url="skin/%SWFPATH%/plugins/textfield.swf" />	<style name="skin_hotspotstyle" onclick="if(linkedscene, skin_hidetooltips(); tween(scale,0.25,0.5); tween(oy,-20,0.5); tween(alpha,0,0.5); looktohotspot(); loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); skin_updatescroll(); );" scale="0.5" oy="0" url="skin/vtourskin_hotspot.png" edge="top" distorted="false" tooltip="" onloaded="if(skin_settings.tooltips_hotspots, if(linkedscene, copy(tooltip,scene[get(linkedscene)].title); loadstyle(skin_tooltips); ));" />	<style name="skin_tooltips" onover="copy(layer[skin_tooltip].html, tooltip);	               set(layer[skin_tooltip].visible, true);	               tween(layer[skin_tooltip].alpha, 1.0, 0.1);	               asyncloop(hovering, copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );" onout="tween(layer[skin_tooltip].alpha, 0.0, 0.1, default, set(layer[skin_tooltip].visible,false), copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );" />	<layer name="skin_thumbs_container" keep="true" parent="skin_scroll_container" 	       type="container" 	       visible="false" maskchildren="true" 	       align="lefttop" width="100%" height="100%" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_tooltip" keep="true" parent="stage" 	       url="skin/%SWFPATH%/plugins/textfield.swf" 	       visible="false" enabled="false" 	       alpha="0.0" 	       align="lefttop" edge="bottom" oy="-2" width="200" height="300" 	       html=""	       css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;"	       embeddedfonts="false"	       autowidth="auto" autoheight="true" padding="2" 	       background="false" 	       textshadow="1.0" textshadowrange="6" textshadowangle="90" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_scroll_window" keep="true" 	       type="container" 	       maskchildren="true" 	       align="leftbottom" x="0" y="-2" width="100%" height="100%" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       y_closed="-2"	       y_opened="60"	       />	<layer name="skin_btn_in" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="+60" y="4" width="64" height="64" scale="0.5" 	       crop="0|320|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="set(fov_moveforce,-1);"	       onup2="set(fov_moveforce,0);"	       />	<layer name="skin_loadingtext" keep="true" 	       url="skin/%SWFPATH%/plugins/textfield.swf" 	       visible="false" enabled="false" 	       align="center" x="5" y="-5" width="101" height="29" 	       html="loading..."	       css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:22px; font-style:italic;"	       embeddedfonts="false"	       autowidth="auto" autoheight="true" padding="2" 	       background="false" 	       textshadow="2.00" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_buttonglow" keep="true" 	       url="skin/vtourskin.png" 	       visible="false" enabled="false" 	       alpha="0.0" 	       align="center" x="0" y="1" width="64" height="64" 	       crop="64|384|64|64" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_thumbborder" keep="true" parent="skin_thumb_0" 	       url="skin/vtourskin_thumbborder.png" 	       enabled="false" 	       align="lefttop" ox="-2" oy="-2" width="250" height="170" scale="0.5" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_logo" keep="true" 	       url="" 	       capture="false" 	       align="righttop" x="5" y="5" scale="0.25" 	       onclick="if(state == 'small', skin_openlogo(); , skin_closelogo('now'); opened_onclick(); );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       opened_onclick="openurl('...',_blank);"	       state="small"	       />	<plugin name="vtoureditor" url="plugins/vtoureditor.swf" keep="true" align="" x="" y="" />	<layer name="skin_scroll_layer" keep="true" parent="skin_scroll_window" 	       type="container" 	       align="leftbottom" x="0" y="-652" width="100%" height="100%" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btmborder" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       enabled="false" 	       align="bottomleft" edge="topleft" x="0" y="0" width="100%" height="12" 	       crop="2|52|60|12" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_prev" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       enabled="false" 	       alpha="0.30" 	       align="left" x="5" y="0" width="64" height="64" scale="0.5" 	       crop="0|64|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       onclick="if(skin_settings.thumbs_loop, skin_nextscene_loop(-1), skin_nextscene(-1) );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_next" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="right" x="5" y="0" width="64" height="64" scale="0.5" 	       crop="64|64|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       onclick="if(skin_settings.thumbs_loop, skin_nextscene_loop(+1), skin_nextscene(+1) );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_thumbs" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="leftbottom" x="50" y="4" width="64" height="64" scale="0.5" 	       crop="0|128|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="skin_showmap(false); skin_showthumbs();"	       />	<layer name="skin_btn_map" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       visible="false" 	       align="leftbottom" x="90" y="4" width="64" height="64" scale="0.5" 	       crop="64|128|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="skin_showthumbs(false); skin_showmap();"	       />	<layer name="skin_btn_lt" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="-100" y="4" width="64" height="64" scale="0.5" 	       crop="0|192|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="set(hlookat_moveforce,-1);"	       onup2="set(hlookat_moveforce,0);"	       />	<layer name="skin_btn_rt" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="-60" y="4" width="64" height="64" scale="0.5" 	       crop="64|192|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="set(hlookat_moveforce,+1);"	       onup2="set(hlookat_moveforce,0);"	       />	<layer name="skin_thumb_0" keep="true" parent="skin_thumbs" 	       url="panos/_sphere.tiles/thumb.jpg" 	       align="lefttop" x="10" y="10" width="120" height="80" 	       crop="0|40|240|160" 	       onclick="copy(layer[skin_thumbborder].parent, name); loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend));"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       linkedscene="scene__sphere"	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_dn" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="+20" y="4" width="64" height="64" scale="0.5" 	       crop="64|256|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="set(vlookat_moveforce,+1);"	       onup2="set(vlookat_moveforce,0);"	       />	<layer name="skin_btn_up" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="-20" y="4" width="64" height="64" scale="0.5" 	       crop="0|256|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="set(vlookat_moveforce,-1);"	       onup2="set(vlookat_moveforce,0);"	       />	<layer name="skin_btn_ou" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="+100" y="4" width="64" height="64" scale="0.5" 	       crop="64|320|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="set(fov_moveforce,+1);"	       onup2="set(fov_moveforce,0);"	       />	<layer name="skin_btn_fs" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="bottom" x="140" y="4" width="64" height="64" scale="0.5" 	       crop="0|576|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       onclick="switch(fullscreen);"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_hide" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="right" x="50" y="0" width="64" height="64" scale="0.5" 	       crop="0|448|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       onclick="skin_hideskin()"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_show" keep="true" parent="skin_control_bar" 	       url="skin/vtourskin.png" 	       align="right" x="5" y="-36" width="64" height="64" scale="0.5" 	       crop="64|448|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       onclick="skin_showskin()"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_topborder" keep="true" parent="skin_scroll_layer" 	       url="skin/vtourskin.png" 	       enabled="false" 	       align="topleft" edge="bottomleft" x="0" y="0" width="100%" height="12" 	       crop="2|0|60|12" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_thumbs_scrollindicator" keep="true" parent="skin_thumbs_container" 	       type="container" bgcolor="0xffffff" bgalpha="0.25" 	       visible="false" enabled="false" 	       align="lefttop" y="100" width="0" height="4" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_scroll_container" keep="true" parent="skin_scroll_layer" 	       type="container" bgalpha="0.5" 	       maskchildren="true" 	       align="lefttop" x="0" y="0" width="100%" height="100%" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_btn_gyro" url="" 	       visible="false" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_thumb_1" keep="true" parent="skin_thumbs" 	       url="panos/_sphere______.tiles/thumb.jpg" 	       align="lefttop" x="140" y="10" width="120" height="80" 	       crop="0|40|240|160" 	       onclick="copy(layer[skin_thumbborder].parent, name); loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend));"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       linkedscene="scene__sphere______"	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_thumbs" keep="true" parent="skin_thumbs_container" 	       url="skin/%SWFPATH%/plugins/scrollarea.swf" 	       alturl="skin/%SWFPATH%/plugins/scrollarea.js" 	       align="top" x="0" zorder="1" width="270" height="100" 	       onloaded="skin_updatescroll();"	       acceleration="0.08"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       boverflow="-552"	       direction="h"	       draggable="true"	       friction="0.95"	       hoverflow="-552"	       loverflow="-503"	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       momentum="0.06666666666666667"	       mwheel="true"	       onhover_autoscrolling="false"	       onscroll="skin_updatethumbscroll();"	       overscroll="1"	       returnacceleration="0.15"	       roverflow="-503"	       state="closed"	       toverflow="0"	       woverflow="-1006"	       />	<layer name="skin_map" keep="true" parent="skin_scroll_container" 	       url="" 	       visible="false" 	       align="lefttop" x="0" y="0" zorder="1" width="100%" height="50%" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       lat="0"	       lng="0"	       maptype="satellite"	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       onmapready="skin_addmapspots();"	       state="closed"	       zoom="10"	       >		<maptypecontrol align="righttop" buttonalign="v" visible="true" x="5" y="5" />		<radar headingoffset="0" visible="false" />		<spotstyle name="default" activeurl="skin/vtourskin_mapspotactive.png" edge="bottom" scale="0.5" url="skin/vtourskin_mapspot.png" x="-5" y="-8" />	</layer>	<layer name="skin_thumbs_scrollleft" keep="true" parent="skin_thumbs_container" 	       url="skin/vtourskin.png" 	       visible="false" 	       align="lefttop" edge="left" x="5" y="50" zorder="2" width="64" height="64" scale="0.5" 	       crop="0|64|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(+2,0));"	       />	<layer name="skin_thumbs_scrollright" keep="true" parent="skin_thumbs_container" 	       url="skin/vtourskin.png" 	       visible="false" 	       align="righttop" edge="right" x="5" y="50" zorder="2" width="64" height="64" scale="0.5" 	       crop="64|64|64|64" 	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(-2,0));"	       />	<layer name="skin_map_zoom_in" keep="true" parent="skin_map" 	       url="skin/vtourskin.png" 	       visible="false" 	       align="right" x="0" y="-40" zorder="2" width="46" height="64" 	       crop="9|512|46|64" 	       ondown="layer[skin_map].zoomin();  skin_buttonglow(get(name));"	       onup="skin_buttonglow(null);"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_map_zoom_out" keep="true" parent="skin_map" 	       url="skin/vtourskin.png" 	       visible="false" 	       align="right" x="0" y="+40" zorder="2" width="46" height="64" 	       crop="73|512|46|64" 	       ondown="layer[skin_map].zoomout(); skin_buttonglow(get(name));"	       onup="skin_buttonglow(null);"	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<layer name="skin_control_bar" keep="true" 	       type="container" bgalpha="0.5" 	       align="leftbottom" x="0" y="-42" zorder="3" width="100%" height="40" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       y_closed="-42"	       y_opened="20"	       />	<layer name="skin_title" keep="true" parent="skin_scroll_layer" 	       url="skin/%SWFPATH%/plugins/textfield.swf" 	       enabled="false" 	       align="lefttop" edge="leftbottom" x="5" y="-3" zorder="4" width="95%" height="22" 	       html="Virtual Tour - _sphere"	       css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;"	       embeddedfonts="false"	       autowidth="auto" autoheight="true" padding="2" 	       background="false" 	       textshadow="1.0" 	       bgborder="0"	       bgroundedge="0"	       bgshadow=""	       maxheight="0"	       maxwidth="0"	       minheight="0"	       minwidth="0"	       />	<!-- <plugin name="editor" url="plugins/editor.swf" keep="true" align="bottom" x="0" y="16" /> -->	<hotspot name="spot1" url="skin/vtourskin_hotspot.png" 	         ath="32.648" atv="2.879" edge="top" oy="0" width="128" height="112" scale="0.5" 	         onloaded="if(skin_settings.tooltips_hotspots, if(linkedscene, copy(tooltip,scene[get(linkedscene)].title); loadstyle(skin_tooltips); ));"	         onclick="if(linkedscene, skin_hidetooltips(); tween(scale,0.25,0.5); tween(oy,-20,0.5); tween(alpha,0,0.5); looktohotspot(); loadscene(get(linkedscene),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend)); skin_updatescroll(); );"	         linkedscene="scene__sphere______"	         tooltip=""	         />	<hotspot name="hs1" fillcolor="0xaaaaaa" fillalpha="0.5" borderwidth="3.0" bordercolor="0xaaaaaa" borderalpha="1.0" onclick="openurl('#reel_page',_self );"	         >		<point ath="-25.164064" atv="-14.070234" />		<point ath="-8.035363" atv="-22.092825" />		<point ath="8.332533" atv="-9.005516" />		<point ath="-8.644457" atv="4.603478" />		<point ath="-17.769808" atv="-0.148126" />	</hotspot>	<lensflare name="lf0" set="DEFAULT" ath="-26.915541" atv="-18.222545" />	<scene name="scene__sphere" onstart="" lat="" title="_sphere" thumby="10" thumbx="75" thumburl="panos/_sphere.tiles/thumb.jpg" heading="" lng="">		<view maxpixelzoom="2.0" limitview="auto" fov="120.000" hlookat="0.000" fovmin="70" vlookat="0.000" fovmax="140" fovtype="MFOV" />		<preview url="panos/_sphere.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512">			<level tiledimagewidth="1024" tiledimageheight="1024">				<cube url="panos/_sphere.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="512" tiledimageheight="512">				<cube url="panos/_sphere.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>			<mobile>				<cube url="panos/_sphere.tiles/mobile_%s.jpg" />			</mobile>		</image>		<hotspot name="spot1" style="skin_hotspotstyle" atv="2.879" ath="32.648" linkedscene="scene__sphere______" />	</scene>	<scene name="scene__sphere______" onstart="" lat="" title="_sphere副本" thumby="10" thumbx="205" thumburl="panos/_sphere______.tiles/thumb.jpg" heading="" lng="">		<view maxpixelzoom="2.0" limitview="auto" fov="120.000" hlookat="0.000" fovmin="70" vlookat="0.000" fovmax="140" fovtype="MFOV" />		<preview url="panos/_sphere______.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512">			<level tiledimagewidth="1024" tiledimageheight="1024">				<cube url="panos/_sphere______.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="512" tiledimageheight="512">				<cube url="panos/_sphere______.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>			<mobile>				<cube url="panos/_sphere______.tiles/mobile_%s.jpg" />			</mobile>		</image>		<hotspot name="spot1" style="skin_hotspotstyle" atv="19.167" ath="93.125" linkedscene="scene__sphere" />	</scene></krpano>